{"mappings":"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","sources":["src/js/index.js","src/js/spinner.js","<<jsx-config-pragma.js>>","src/js/search_by_keywords.js","src/js/voiceSearch.js","src/js/murkup_slider.js","node_modules/@glidejs/glide/dist/glide.esm.js","src/js/day-night.js","src/js/filter.js"],"sourcesContent":["import './userAuth/firebase-auth-import';\nimport Spinner from './spinner';\nimport { saveGenres } from './genres_storage';\nimport { renderMarkupTrending } from './render_trending.js';\nimport './search_by_keywords';\nimport './voiceSearch';\nimport './add_to_list';\nimport './modal-film';\n\nimport { onPlayVideo } from './play_trailer_btn';\nimport { openModalTrailer, closeModalTrailer } from './play_trailer_btn';\nimport { toggleModal, toggleCard } from './modal-team.js';\n\nsaveGenres()\n  .then(() => renderMarkupTrending())\n  .catch(error => console.log(error));\n\nimport { getTrendForSlider } from '../js/murkup_slider';\n\ngetTrendForSlider();\n\nimport './day-night';\n\n// Экземпляр класса Spinner имеет 2 метода:\n// 1. spinner.enable() - выключает спинер\n// 2. spinner.disable() - включает спинер\nconst spinner = new Spinner({\n  selector: '[data-action=\"load-spinner\"]',\n});\nspinner.enable(); // сейчас спинер выключен\n// Filter\nimport './filter';\n","export default class Spinner {\n  constructor({ selector }) {\n    this.refs = this.getRefs(selector);\n  }\n\n  getRefs(selector) {\n    const refs = {};\n    refs.backdrop = document.querySelector(selector);\n    refs.spinner = refs.backdrop.querySelector('.spinner-grow');\n    return refs;\n  }\n\n  enable() {\n    this.refs.backdrop.classList.add('is-hidden');\n  }\n\n  disable() {\n    this.refs.backdrop.classList.remove('is-hidden');\n  }\n}\n",null,"import { QueryHandler } from './query_handler';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { createCardMarkup } from './card_markup';\nimport Spinner from './spinner';\nimport { pagination } from './render_trending';\nimport localStorageMethod from './locale-storage-methods';\nimport { FILMS, LAST_REQUEST } from './localStorageKeys';\nimport { refs } from './refs';\n\nconst queryHandler = new QueryHandler();\nconst spinner = new Spinner({\n  selector: '[data-action=\"load-spinner\"]',\n});\n\nrefs.searchForm.addEventListener('submit', handleSubmit);\n\nNotify.init({\n  timeout: 1500,\n  position: 'center-top',\n  backOverlay: false,\n  borderRadius: '25px',\n});\n\nexport async function handleSubmit(evt) {\n  evt.preventDefault();\n  const {\n    elements: { searchQuery },\n  } = evt.target;\n  const valueSearchQuery = searchQuery.value.trim().toLowerCase();\n  if (!valueSearchQuery) {\n    Notify.failure('Enter the name of the movie!');\n    return;\n  }\n\n  spinner.disable();\n  queryHandler.query = valueSearchQuery;\n  try {\n    const { results, total_results, page, total_pages } =\n      await queryHandler.fetchQueryResultsForMovieSearch();\n\n    if (!results.length) {\n      queryHandler.query = localStorageMethod.load(LAST_REQUEST);\n      return Notify.failure(\n        'Search result not successful. Enter the correct movie name.'\n      );\n    }\n\n    localStorageMethod.save(LAST_REQUEST, valueSearchQuery);\n    pagination.removeMarkup();\n    if (total_pages > 1) {\n      pagination.totalPages = total_pages;\n      pagination.page = page;\n      pagination.fetch = page =>\n        queryHandler.fetchQueryResultsForMovieSearch(page);\n\n      pagination.renderMarkup();\n    }\n    if (!results.length) {\n      Notify.failure(\n        'Search result not successful. Enter the correct movie name.'\n      );\n      spinner.enable();\n      return;\n    }\n\n    Notify.success(`Hooray! We found ${total_results} movie!`);\n\n    localStorageMethod.remove(FILMS);\n    localStorageMethod.save(FILMS, results);\n\n    const markup = results.map(createCardMarkup).join('');\n    refs.filmListRef.innerHTML = markup;\n  } catch (error) {\n    console.log(error);\n  } finally {\n    spinner.enable();\n  }\n}\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { refs } from \"./refs\";\nimport { createCardMarkup } from './card_markup';\nimport localStorageMethod from './locale-storage-methods';\nimport { FILMS, LAST_REQUEST } from './localStorageKeys';\nimport { QueryHandler } from './query_handler';\nimport {pagination} from './render_trending'\nconst queryHandlerVoice = new QueryHandler();\n\n// The speech recognition interface lives on the browser’s window object\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition; // if none exists -> undefined\nif (SpeechRecognition) {\n  console.log('Your Browser supports speech Recognition');\n\n  const recognition = new SpeechRecognition();\n\n  recognition.continuous = true;\n  recognition.lang = 'en-US';\n\n  const micBtn = document.querySelector('.search-btn__mic');\n  const micIcon = micBtn.firstElementChild;\n\n  micBtn.addEventListener('click', micBtnClick);\n  function micBtnClick() {\n    console.log('yes');\n    if (micIcon.classList.contains('mic-stop')) {\n      // Start Voice Recognition\n      recognition.start(); // First time you have to allow access to mic!\n    } else {\n      recognition.stop();\n    }\n  }\n\n  recognition.addEventListener('start', startSpeechRecognition); // <=> recognition.onstart = function() {...}\n  function startSpeechRecognition() {\n    micIcon.classList.remove('mic-stop');\n    micIcon.classList.add('mic-rec');\n    refs.info.classList.add('search-form__info--hover');\n    refs.searchFormInput.focus();\n    console.log('Voice activated, SPEAK');\n  }\n\n  recognition.addEventListener('end', endSpeechRecognition); // <=> recognition.onend = function() {...}\n  function endSpeechRecognition() {\n    micIcon.classList.remove('mic-rec');\n    micIcon.classList.add('mic-stop');\n    refs.info.classList.remove('search-form__info--hover');\n    refs.searchFormInput.focus();\n    console.log('Speech recognition service disconnected');\n  }\n\n  recognition.addEventListener('result', resultOfSpeechRecognition); // <=> recognition.onresult = function(event) {...} - Fires when you stop talking\n  function resultOfSpeechRecognition(e) {\n    const { searchFormInput } = refs;\n\n    const current = e.resultIndex;\n    const transcript = e.results[current][0].transcript;\n\n    \n     if (!searchFormInput.value) {\n      searchFormInput.value = transcript;\n    } else {\n      if (transcript.toLowerCase().trim() === 'search') {\n        onSearch();\n        recognition.stop();\n      } else if (transcript.toLowerCase().trim() === 'reset') {\n        searchFormInput.value = '';\n      } else {\n        searchFormInput.value = transcript;\n      }\n    }\n  }\n  refs.info.textContent = 'Voice Commands: \"reset\", \"search\"';\n} else {\n  console.log('Your Browser does not support speech Recognition');\n  refs.info.textContent = 'Your Browser does not support Speech Recognition';\n}\n\n\nasync function onSearch() {\n  const valueSearchQuery = refs.searchFormInput.value.trim().toLowerCase();\n\n  queryHandlerVoice.query = valueSearchQuery;\n\n  try {\n    const { results, total_results, page, total_pages } =\n      await queryHandlerVoice.fetchQueryResultsForMovieSearch();\n\n    if (!results.length) {\n      queryHandlerVoice.query = localStorageMethod.load(LAST_REQUEST);\n      return Notify.failure(\n        'Search result not successful. Enter the correct movie name.'\n      );\n    }\n\n    localStorageMethod.save(LAST_REQUEST, valueSearchQuery);\n    pagination.removeMarkup();\n    if (total_pages > 1) {\n      pagination.totalPages = total_pages;\n      pagination.page = page;\n      pagination.fetch = page =>\n        queryHandlerVoice.fetchQueryResultsForMovieSearch(page);\n\n      pagination.renderMarkup();\n    }\n    if (!results.length) {\n      Notify.failure(\n        'Search result not successful. Enter the correct movie name.'\n      );\n      return;\n    }\n\n    Notify.success(`Hooray! We found ${total_results} movie!`);\n\n    localStorageMethod.remove(FILMS);\n    localStorageMethod.save(FILMS, results);\n\n    const markup = results.map(createCardMarkup).join('');\n    refs.filmListRef.innerHTML = markup;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import Glide from '@glidejs/glide';\nimport { QueryHandler } from './query_handler';\nimport { refs } from './refs';\nimport { openSliderTrailer } from './play_trailer_btn';\n\nconst glider = new Glide('.glide', {\n  type: 'slider',\n  startAt: 0,\n  perView: 8,\n  autoplay: 2000,\n  hoverpause: true,\n  bound: true,\n});\n\nconst queryHandler = new QueryHandler();\n\nexport async function getTrendForSlider() {\n  try {\n    const { results } = await queryHandler.fetchQueryResultsForTrending();\n\n    createMarkupSlider(results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createMarkupSlider(results) {\n  // const { title, poster_path, release_date, genre_ids, id } = data;\n  const markup = results\n    .map(({ title, poster_path, id }) => {\n      let imageUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      return /*html*/ `\n    <li class=\"film-slider__item\">\n   \n      <img\n        class=\"film-slider__img\"\n        src=\"${imageUrl}\"\n        alt=\"${title}\"\n        data-id=\"${id}\"\n\t\t  width=\"143.25\"\n\t\t  height =\"214.8\"\n      />\n   \n        <button data-id=\"${id}\" class=\"trailer-btn-slider\" type=\"button\">\n        <h2 data-id=\"${id}\">Watch trailer</h2>\n</button>\n    </li>\n\n  `;\n    })\n    .join('');\n\n  refs.slider.innerHTML = markup;\n\n  glider.mount();\n\n  openSliderTrailer(document.querySelectorAll('.trailer-btn-slider'));\n}\n\n// function openSliderTrailer(e) {\n//   console.log(e.currentTarget);\n// }\n","/*!\n * Glide.js v3.6.0\n * (c) 2013-2022 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = Object.assign({}, defaults.classes.direction, settings.classes.direction);\n    }\n\n    if (settings.classes.hasOwnProperty('type')) {\n      options.classes.type = Object.assign({}, defaults.classes.type, settings.classes.type);\n    }\n\n    if (settings.classes.hasOwnProperty('slide')) {\n      options.classes.slide = Object.assign({}, defaults.classes.slide, settings.classes.slide);\n    }\n\n    if (settings.classes.hasOwnProperty('arrow')) {\n      options.classes.arrow = Object.assign({}, defaults.classes.arrow, settings.classes.arrow);\n    }\n\n    if (settings.classes.hasOwnProperty('nav')) {\n      options.classes.nav = Object.assign({}, defaults.classes.nav, settings.classes.nav);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\n\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Coerces a NodeList to an Array.\n *\n * @param  {NodeList} nodeList\n * @return {Array}\n */\n\nfunction toArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html (Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = toArray(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn(\"Could not find track element. Please use \".concat(TRACK_SELECTOR, \" attribute.\"));\n      }\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length !== 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      if (item) {\n        item.classList.add(settings.classes.nav.active);\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.nav.active);\n        });\n      }\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.nav.active);\n      }\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n\n      if (event.code === 'ArrowRight') {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n      }\n\n      if (event.code === 'ArrowLeft') {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { Glide as default };\n","document.querySelector('.themetoggle').addEventListener('click', event => {\n  event.preventDefault();\n  if (localStorage.getItem('theme') === 'dark') {\n    localStorage.removeItem('theme');\n  } else {\n    localStorage.setItem('theme', 'dark');\n  }\n  addDarkClassToHTML();\n});\n\nfunction addDarkClassToHTML() {\n  try {\n    if (localStorage.getItem('theme') === 'dark') {\n      document.querySelector('body').classList.add('dark');\n      document.querySelector('.hero').classList.add('dark');\n      document.querySelector('.themetoggle').classList.add('dark');\n      document.querySelector('.material-icons').classList.add('dark');\n      document.querySelector('header').classList.add('dark');\n      document.querySelector('.modal-dark').classList.add('dark');\n      document.querySelector('.day-nigth-btn-box').classList.add('dark');\n      document.querySelector('.container-footer').classList.add('dark');\n      document.querySelector('.card__container').classList.add('dark');\n      document.querySelector('.modal-film ').classList.add('dark');\n      document.querySelector('.card-list').classList.add('dark');\n      document.querySelector('.pagination__list').classList.add('dark');\n    } else {\n      document.querySelector('body').classList.remove('dark');\n      document.querySelector('.hero').classList.remove('dark');\n      document.querySelector('.themetoggle').classList.remove('dark');\n      document.querySelector('.material-icons').classList.remove('dark');\n      document.querySelector('header').classList.remove('dark');\n      document.querySelector('.modal-dark').classList.remove('dark');\n      document.querySelector('.day-nigth-btn-box').classList.remove('dark');\n      document.querySelector('.container-footer').classList.remove('dark');\n      document.querySelector('.card__container').classList.remove('dark');\n      document.querySelector('.modal-film ').classList.remove('dark');\n      document.querySelector('.card-list').classList.remove('dark');\n      document.querySelector('.pagination__list').classList.remove('dark');\n    }\n  } catch (err) {}\n}\n\naddDarkClassToHTML();\n","import axios from 'axios';\nimport { MOVIEDB_KEY } from './query_handler';\nimport storage from './locale-storage-methods';\nimport {FILMS} from './localStorageKeys';\nimport { createCardMarkup } from './card_markup';\nimport { refs } from './refs';\nimport { filterItem } from './refs';\nimport { renderMarkupTrending, pagination, onChangePageClick} from './render_trending'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport './modal-film';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\n// Слухачі подій\n\nfilterItem.genreForm.addEventListener('input', eventGenre);\nfilterItem.yearForm.addEventListener('input', eventYear);\nfilterItem.resetButton.addEventListener('click', onResetSearch);\n\nrefs.pagination.removeEventListener('click', onChangePageClick);\nrefs.pagination.addEventListener('click', onChangePageOfFilterClick);\n\n// Змінні для запиту на бекенд\nlet formSearch = {\n  year: '',\n  genre: '',\n  query: '',\n  discover: `trending`,\n  page: '',\n};\n\n\n//Пошук рендер фильму по жанру __________________________\nasync function eventGenre(evt) {\n  evt.preventDefault();\n  console.log(evt);\n  if (evt.target.value !== formSearch.genre || !formSearch.genre) {\n    pagination.resetPage();\n  }\n\n  if (evt) {\n    formSearch.genre = evt.target.value;\n    // console.log('genre id:', evt.target.value);\n    // formSearch.page = 1;\n\n\n    await getSearchForm(formSearch.genre, formSearch.year, pagination.page)\n      .then(data => {\n\n\n        if (data.results.length !== 0) {\n          refs.filmListRef.innerHTML = '';\n          // console.log('видаляємо фільми зі сторінки');\n          const markup = data.results.map(createCardMarkup).join('');\n          refs.filmListRef.innerHTML = markup;\n          // console.log('create markup');\n          \n        } else {\n         \n          Notify.failure(`Nothing was found for your request`);\n \n        }\n      })\n      .catch(error => console.log(error))\n\n  }\n}\n\n\n// Пошук і рендер фільмів по роках __________________________\nasync function eventYear(evt) {\n  evt.preventDefault();\n  if (evt.target.value !== formSearch.year || !formSearch.year) {\n    pagination.resetPage();\n  }\n  // якщо евент не пустий, то беремо значення з форми\n  if (evt) {\n    formSearch.year = Number(evt.target.value);\n    // formSearch.page = 1;\n\n    await getSearchForm(formSearch.genre, formSearch.year, pagination.page)\n      .then(data => {\n\n        if (data.results.length !== 0) {\n          refs.filmListRef.innerHTML = '';\n          // console.log('видаляємо фільми зі сторінки');\n          const markup = data.results.map(createCardMarkup).join('');\n          refs.filmListRef.innerHTML = markup;\n          // console.log('create markup');\n        } else {\n\n          Notify.failure(`Nothing was found for your request`);\n        };\n      }).catch(error => console.log(error))\n  };\n};\n\n\n// Запит на бекенд по жанру або року __________________________\nexport async function getSearchForm(\n  genre = '',\n  year = '',\n  pageNumber = '',\n  query = ''\n) {\n\n  // якщо значення фільтра не дорівнює Start або рік не дорінвює ''\n  // то в запит підставляємо рік вибраний у формі\n  formSearch.year =\n    filterItem.yearForm.value !== 'start' || year !== ''\n      ? `&primary_release_year=${filterItem.yearForm.value}`\n      : '';\n  \n// ✅ якщо значення фільтра не дорівнює '' та не дорівнює start\n// то в запит підставляємо значення вибране у формі\n  formSearch.genre =\n    genre !== '' && filterItem.genreForm.value !== 'start'\n      ? `&with_genres=${filterItem.genreForm.value}`\n      : '';\n  // console.log(formSearch.genre);\n  \n  formSearch.query = `&query=${query}`;\n  // console.log(query);\n  // formSearch.page = page !== 0 || page !== '' ? `&page=${page}` : '';\n\n  if (query === '') {\n    formSearch.queryFetch = '';\n    // console.log(formSearch);\n  }\n  if (query !== '' && genre === '') {\n    formSearch.discover = 'search';\n  }\n  if (query === '' && genre !== '') {\n    formSearch.discover = 'discover';\n  }\n  if (query === '' && year !== '') {\n    formSearch.discover = 'discover';\n  }\n  const url = `${BASE_URL}${formSearch.discover}/movie?api_key=${MOVIEDB_KEY}&sort_by=popularity.desc${formSearch.genre}${formSearch.year}&include_adult=false&page=${pageNumber}`\n   // Перевірка рядка запиту\n  // console.log(url);\n\n  // Запит\n  const fetchCard = await axios.get(url);\n  const { total_pages, page, results } = fetchCard.data;\n  // Записуємо результат запиту у localstorage\n  // storage.save('resultFilterItems', fetchCard.data.results)\n  storage.save('films', results)\n//  Записуємо загальну кількість результатів\n  storage.save('totalItems', total_pages);\n// Записуємо кількість за один запит\n  storage.save('itemsPerPage', results.length);\n\n  // Пагінація\n  if (total_pages > 1) {\n        pagination.totalPages = total_pages;\n        pagination.page = page;\n        pagination.fetch = page =>\n          getSearchForm(formSearch.genre, formSearch.year, page);\n        pagination.renderMarkup();\n  }\n  \n  return fetchCard.data;\n}\n\n\n//Створення і рендер розмітки в select YEAR ___________________\nfunction createSelectOptions() {\n  let arrayYear = [];\n  const date = new Date();\n\n  for (let i = date.getFullYear(); i >= 1950; i -= 1) {\n    arrayYear.push(\n      `<option class = 'filter__form-years' value=\"${i}\">${i}</option>`\n    );\n  }\n  const elements = arrayYear.join('');\n  filterItem.yearForm.insertAdjacentHTML('beforeend', elements);\n};\n\n\n// Скидання фільтру по кнопці reset\nfunction onResetSearch(evt) {\n  evt.preventDefault();\n  pagination.resetPage();\n  filterItem.genreForm.options.selectedIndex = 0;\n  filterItem.yearForm.options.selectedIndex = 0;\n  formSearch.genre = '';\n  formSearch.year = '';\n  formSearch.page = 1;\n  refs.filmListRef.innerHTML = '';\n  renderMarkupTrending()\n}\ncreateSelectOptions();\n\n// Пагінація _________________________________________\n\n\nexport function onChangePageOfFilterClick(e) {\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n  if (e.target.className === 'btn__next') {\n    pagination.incrementPage();\n  }\n  if (e.target.className === 'btn__prev') {\n    pagination.decrementPage();\n  }\n  if (e.target.className === 'dots') {\n    return;\n  }\n  if (e.target.className === 'num') {\n    pagination.page = Number(e.target.textContent);\n  }\n  \n  \n  pagination\n    .fetch(pagination.page)\n    .then(({ results }) => {\n      // console.log(results);\n      // console.log(pagination.fetch);\n      const markup = results.map(createCardMarkup).join('');\n      storage.save(FILMS, results);\n      refs.filmListRef.innerHTML = markup;\n    })\n    .catch(error => console.log(error));\n\n  pagination.renderMarkup();\n}\n"],"names":["parcelRequire","$8MBJY","$dd8ebecfaae47a78$export$2e2bcd8739ae039","Spinner","param","selector","this","refs","getRefs","key","backdrop","document","querySelector","spinner","classList","add","remove","$bpxeT","$14a4640bacd2b36f$var$queryHandler","$8RVSI","QueryHandler","$14a4640bacd2b36f$var$spinner","$14a4640bacd2b36f$var$_handleSubmit","$parcel$interopDefault","$2TvXO","mark","_callee","evt","_target","searchQuery","valueSearchQuery","ref","results","total_results","page1","total_pages","markup","preventDefault","target","elements","value","trim","toLowerCase","$h6c0i","Notify","failure","disable","query","fetchQueryResultsForMovieSearch","_ctx","sent","page","length","$h0Lhl","default","load","$d9uG3","LAST_REQUEST","save","$4Vhfo","pagination","removeMarkup","totalPages","fetch","renderMarkup","enable","success","concat","FILMS","map","$h0FqT","createCardMarkup","join","$4Nugj","filmListRef","innerHTML","console","log","t0","apply","arguments","searchForm","addEventListener","init","timeout","position","backOverlay","borderRadius","$310aaa974d7c84f9$var$queryHandlerVoice","$310aaa974d7c84f9$var$SpeechRecognition","window","SpeechRecognition","webkitSpeechRecognition","$310aaa974d7c84f9$var$recognition","continuous","lang","$310aaa974d7c84f9$var$micBtn","$310aaa974d7c84f9$var$micIcon","firstElementChild","contains","start","stop","info","searchFormInput","focus","e","current","resultIndex","transcript","$310aaa974d7c84f9$var$_onSearch","$310aaa974d7c84f9$var$onSearch","textContent","$511d2477bdce29e7$var$_typeof","obj1","Symbol","iterator","obj","constructor","prototype","$511d2477bdce29e7$var$_classCallCheck","instance","Constructor","TypeError","$511d2477bdce29e7$var$_defineProperties","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","$511d2477bdce29e7$var$_createClass","protoProps","staticProps","$511d2477bdce29e7$var$_getPrototypeOf","o1","setPrototypeOf","getPrototypeOf","o","__proto__","$511d2477bdce29e7$var$_setPrototypeOf","o2","p1","p","$511d2477bdce29e7$var$_possibleConstructorReturn","self","call","ReferenceError","$511d2477bdce29e7$var$_assertThisInitialized","$511d2477bdce29e7$var$_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","$511d2477bdce29e7$var$_isNativeReflectConstruct","result","Super","NewTarget","$511d2477bdce29e7$var$_superPropBase","object","property","hasOwnProperty","$511d2477bdce29e7$var$_get","get","receiver","base","desc","getOwnPropertyDescriptor","$511d2477bdce29e7$var$defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perSwipe","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","waitForTransition","throttle","direction","peek","cloningRatio","breakpoints","classes","swipeable","dragging","ltr","rtl","slider","carousel","slide","clone","active","arrow","disabled","nav","$511d2477bdce29e7$var$warn","msg","error","$511d2477bdce29e7$var$toInt","parseInt","$511d2477bdce29e7$var$isString","$511d2477bdce29e7$var$isObject","$511d2477bdce29e7$var$isFunction","$511d2477bdce29e7$var$isUndefined","$511d2477bdce29e7$var$isArray","Array","$511d2477bdce29e7$var$mount","glide","extensions","events","components","name","_name","mount","$511d2477bdce29e7$var$define","prop","definition","$511d2477bdce29e7$var$mergeOptions","defaults1","settings","options","assign","$511d2477bdce29e7$var$EventsBus","EventsBus1","undefined","hop","event","handler","index","push","on","context","emit","forEach","item","$511d2477bdce29e7$var$Glide$1","Glide1","_c","_t","_e","transformers","pattern","Run","make","distance","Transition","Move","interval","_o","set","_i","_d","$511d2477bdce29e7$var$throttle","func","wait","args","previous","later","leading","$511d2477bdce29e7$var$now","at","remaining","clearTimeout","trailing","setTimeout","cancel","throttled","$511d2477bdce29e7$var$MARGIN_TYPE","n","nextSibling","nodeType","node","matched","$511d2477bdce29e7$var$exist","HTMLElement","$511d2477bdce29e7$var$toArray","nodeList","slice","listeners","EventsBinder1","el","closure","capture","removeEventListener","$511d2477bdce29e7$var$VALID_DIRECTIONS","$511d2477bdce29e7$var$Rtl","Glide","Components","translate","$511d2477bdce29e7$var$Gap","Gaps","multiplier","$511d2477bdce29e7$var$Grow","Clones","grow","Glide12","modify","$511d2477bdce29e7$var$Focusing","Glide13","slideWidth","$511d2477bdce29e7$var$supportsPassive","$511d2477bdce29e7$var$opts","$511d2477bdce29e7$var$supportsPassive$1","$511d2477bdce29e7$var$START_EVENTS","$511d2477bdce29e7$var$MOVE_EVENTS","$511d2477bdce29e7$var$END_EVENTS","$511d2477bdce29e7$var$CONTROLS_SELECTOR","$511d2477bdce29e7$var$NEXT_CONTROLS_SELECTOR","$511d2477bdce29e7$var$sortBreakpoints","points","keys","sort","reduce","r","k","$511d2477bdce29e7$var$COMPONENTS","Html","Glide4","Events","_$Html","root","track","$511d2477bdce29e7$var$TRACK_SELECTOR","collectSlides","slides","wrapper","children","filter","_r","t","Translate","Glide15","transform","Glide14","mutate","TRANSFORMERS","transformer","$511d2477bdce29e7$var$mutator","translate3d","style","mozTransform","webkitTransform","getStartIndex","Sizes","isOffset","travelDistance","after","_$Translate","startWidth","getTravelDistance","compose","Glide16","duration","transition","callback","_$Transition","isType","offset","Direction","Glide11","resolve","token","is","split","$511d2477bdce29e7$var$FLIPED_MOVEMENTS","addClass","_$Direction","_v","indexOf","Peek","Glide5","_$Peek","before","Glide7","_$Sizes","width","wrapperSize","offsetWidth","reductor","setupSlides","setupWrapper","Glide3","marginLeft","marginRight","_$Gaps","_this","movement","_$Move","Glide6","items","Glide9","collect","_Glide$settings","peekIncrementer","Math","round","cloneCount","reverse","max","floor","append","cloneNode","unshift","_clone","half","appendChild","_i2","prepend","insertBefore","_i3","removeChild","_$Clones","Resize","Glide10","bind","Binder","unbind","off","_$Resize","destroy","Build","Glide8","typeClass","activeClass","$511d2477bdce29e7$var$siblings","sibling","_$Build","removeClasses","move","Glide2","calculate","isStart","isEnd","steps","viewSize","calculateForwardIndex","_$Run","isBound","normalizeForwardIndex","ceil","_index","normalizeBackwardIndex","_m","step","Swipe","Glide17","swipeStartY","passive","bindSwipeStart","swipe","pageY","bindSwipeMove","bindSwipeEnd","touches","subExSx","pageX","swipeStartX","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","parseFloat","_Glide$settings2","threshold","swipeDistance","swipeDeg","swipeSin","PI","unbindSwipeMove","unbindSwipeEnd","_this2","_this3","end","$511d2477bdce29e7$var$MOUSE_EVENTS","changedTouches","_$Swipe","Images","dragstart","_$Images","_a","querySelectorAll","click","prevented","stopPropagation","detached","draggable","attach","_$Anchors","detach","Glide18","$511d2477bdce29e7$var$EventsBinder","_arrowControls","$511d2477bdce29e7$var$PREVIOUS_CONTROLS_SELECTOR","next","setActive","_n","removeClass","controls","_$Controls","resetArrowState","disableArrow","lists","list","element","addBindings","currentTarget","getAttribute","setArrowState","removeActive","press","Glide19","code","_$Keyboard","Autoplay","_$Autoplay","time","clearInterval","Glide20","Glide21","point","matchMedia","matches","defaults2","_$Breakpoints","match","points1","_Core","subClass","superClass","create","Glide22","_super","$f72d4d22311d654d$var$glider","$511d2477bdce29e7$export$2e2bcd8739ae039","$f72d4d22311d654d$var$queryHandler","$f72d4d22311d654d$var$_getTrendForSlider","fetchQueryResultsForTrending","$f72d4d22311d654d$var$createMarkupSlider","title","poster_path","id","imageUrl","$cbjz0","openSliderTrailer","$21c8cffa0398de98$var$addDarkClassToHTML","localStorage","getItem","err","removeItem","setItem","$6142fea1849c7fbd$var$BASE_URL","filterItem","genreForm","$6142fea1849c7fbd$var$_eventGenre","yearForm","$6142fea1849c7fbd$var$_eventYear","resetButton","resetPage","selectedIndex","$6142fea1849c7fbd$var$formSearch","genre","year","renderMarkupTrending","onChangePageClick","nodeName","className","incrementPage","decrementPage","Number","then","catch","discover","$6142fea1849c7fbd$export$2e257b03c00505f4","data","$6142fea1849c7fbd$var$_getSearchForm","pageNumber","url","fetchCard","_data","_args","queryFetch","MOVIEDB_KEY","$dIxxU","arrayYear","Date","getFullYear","insertAdjacentHTML","$6142fea1849c7fbd$var$createSelectOptions","$FJC5b","saveGenres"],"version":3,"file":"index.d9fcaa7b.js.map"}